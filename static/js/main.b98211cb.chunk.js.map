{"version":3,"sources":["Redux/store/constants.ts","BasicReact/components/Header/Header.tsx","BasicReact/components/Footer/Footer.tsx","BasicReact/components/EditPage/EditPage.tsx","BasicReact/components/Subjects/AddNewSubject.tsx","BasicReact/components/Subjects/Expandable.tsx","BasicReact/components/Subjects/SubjectsList.tsx","BasicReact/components/Subjects/Subjects.tsx","BasicReact/BasicReactApp.tsx","ReactHooks/components/Header/Header.tsx","ReactHooks/components/Footer/Footer.tsx","ReactHooks/components/EditPage/EditPage.tsx","ReactHooks/components/Subjects/AddNewSubject.tsx","ReactHooks/components/Subjects/Expandable.tsx","ReactHooks/components/Subjects/SubjectsList.tsx","ReactHooks/components/Subjects/Subjects.tsx","ReactHooks/ReactHooksApp.tsx","Redux/store/selector.ts","Redux/components/Header/Header.tsx","Redux/components/Footer/Footer.tsx","Redux/store/actions.ts","App.tsx","Redux/components/EditPage/EditPage.tsx","Redux/components/Subjects/AddNewSubject.tsx","Redux/components/Subjects/Expandable.tsx","Redux/components/Subjects/SubjectsList.tsx","Redux/components/Subjects/Subjects.tsx","Redux/store/store.ts","Redux/store/reducers.ts","Redux/ReduxApp.tsx","index.tsx"],"names":["ActionsType","Header","firstName","lastName","console","log","className","Footer","EditPage","state","newFirstName","newLastName","onInputChange","event","setState","target","name","value","this","props","onDataChange","type","placeholder","onChange","e","onClick","React","Component","AddNewSubject","subjectName","numberOfHours","building","classroom","group","teacher","addNewSubject","newSubject","Expandable","isExpanded","onExpandedClick","prevState","title","onSubjectDelete","subject","style","display","SubjectsList","subjects","Object","entries","length","map","item","idx","key","Subjects","subjectsCopy","BasicReactApp","isEditPage","onSubmitChange","onButtonClick","memo","useState","setNewFirstName","setNewLastName","setIsExpanded","prevIsExpanded","setSubjects","prevSubjects","ReactHooksApp","setFirstName","setLastName","setIsEditPage","useEffect","prevIsEditPage","getUserIdentity","identity","getUserSubjects","getState","useSelector","initialState","CreatedExamples","dispatch","useDispatch","changeUserIdentity","connect","deleteSubject","store","createStore","action","ReduxApp","App","undefined","chosenApp","setChosenApp","color","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b98211cb.chunk.js","sourcesContent":["export interface Identity {\r\n   firstName: string;\r\n   lastName: string;\r\n}\r\n\r\nexport interface Subject {\r\n   numberOfHours: string;\r\n   building: string;\r\n   classroom: string;\r\n   group: string;\r\n   teacher: string;\r\n}\r\n\r\nexport interface ApplicationState {\r\n   identity: Identity;\r\n   subjects: Record<string, Subject>;\r\n};\r\n\r\nexport const initialState = {\r\n   identity: {\r\n      firstName: 'Konrad',\r\n      lastName: 'Pasik',\r\n   },\r\n   subjects: {},\r\n}\r\n\r\nexport enum ActionsType {\r\n   changeUserIdentity = 'action_type/CHANGE_USER_IDENTITY',\r\n   addNewSubject = 'action_type/ADD_NEW_SUBJECT',\r\n   deleteSubject = 'action_type/DELETE_SUBJECT',\r\n}\r\n\r\nexport type Action = {\r\n   newFirstName: string,\r\n   newLastName: string\r\n   type: ActionsType.changeUserIdentity\r\n} | {\r\n   subjectName: string,\r\n   subject: Subject,\r\n   type: ActionsType.addNewSubject\r\n} | {\r\n   subjectName: string,\r\n   type: ActionsType.deleteSubject\r\n};\r\n","import React from 'react';\r\nimport './Header.css';\r\n\r\ninterface HeaderProps {\r\n   firstName: string;\r\n   lastName: string;\r\n}\r\n\r\nconst Header: React.FC<HeaderProps> = ({ firstName, lastName }) => (\r\n   <div>\r\n      {console.log('Header')}\r\n      <h2 className=\"Header-title\">Cześć {firstName} {lastName}</h2>\r\n   </div>\r\n);\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './Footer.css';\r\n\r\nconst Footer: React.FC = () => (\r\n   <div>\r\n      {console.log('Footer')}\r\n      <h4 className=\"Footer-text\">Copyright 2020</h4>\r\n   </div>\r\n);\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport './EditPage.css';\r\n\r\ninterface EditPageProps {\r\n   firstName: string;\r\n   onDataChange: (firstName: string, lastName: string) => void;\r\n}\r\n\r\ninterface EditPageState {\r\n   newFirstName: string;\r\n   newLastName: string;\r\n}\r\n\r\nclass EditPage extends React.Component<EditPageProps, EditPageState> {\r\n   state = {\r\n      newFirstName: '',\r\n      newLastName: '',\r\n   }\r\n\r\n   onInputChange = (event: any) => {\r\n      this.setState({\r\n         [event.target.name]: event.target.value,\r\n      } as any)\r\n   }\r\n\r\n   render() {\r\n      const { newFirstName, newLastName } = this.state;\r\n      const { firstName, onDataChange } = this.props;\r\n      console.log('EditPage');\r\n      return (\r\n         <div className=\"EditPage-Container\">\r\n            <p className=\"EditPage-Text\">Zmień swoje dane {firstName}</p>\r\n            <div className=\"EditPage-InputsWrapper\">\r\n               <input\r\n                  className=\"EditPage-Input\"\r\n                  type=\"text\"\r\n                  name=\"newFirstName\"\r\n                  placeholder=\"Imie\"\r\n                  value={newFirstName}\r\n                  onChange={e => this.onInputChange(e)}\r\n               />\r\n               <input\r\n                  className=\"EditPage-Input\"\r\n                  type=\"text\"\r\n                  name=\"newLastName\"\r\n                  placeholder=\"Nazwisko\"\r\n                  value={newLastName}\r\n                  onChange={e => this.onInputChange(e)}\r\n               />\r\n            </div>\r\n            <button\r\n               className=\"EditPage-Button\"\r\n               onClick={() => onDataChange(newFirstName, newLastName)}\r\n            >\r\n               Zmień dane\r\n            </button>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\n\r\nexport default EditPage;\r\n","import React from 'react';\r\nimport { Subject } from './Subjects';\r\nimport './styles/AddNewSubject.css';\r\n\r\ninterface AddNewSubjectProps {\r\n   addNewSubject: (subjectName: string, subject: Subject) => void;\r\n}\r\n\r\ninterface AddNewSubjectState extends Subject {\r\n   subjectName: string;\r\n}\r\n\r\nclass AddNewSubject extends React.Component<AddNewSubjectProps, AddNewSubjectState> {\r\n   state = {\r\n      subjectName: '',\r\n      numberOfHours: '',\r\n      building: '',\r\n      classroom: '',\r\n      group: '',\r\n      teacher: '',\r\n   }\r\n\r\n   onInputChange = (event: any) => {\r\n      this.setState({\r\n         [event.target.name]: event.target.value,\r\n      } as any)\r\n   }\r\n\r\n   render() {\r\n      const {\r\n         subjectName,\r\n         numberOfHours,\r\n         building,\r\n         classroom,\r\n         group,\r\n         teacher,\r\n      } = this.state;\r\n      const { addNewSubject } = this.props;\r\n      const newSubject = {\r\n         numberOfHours,\r\n         building,\r\n         classroom,\r\n         group,\r\n         teacher,\r\n      }\r\n      console.log('AddNewSubject');\r\n      return (\r\n         <div className=\"AddNewSubject-Container\">\r\n            <p className=\"AddNewSubject-Text\">Dodaj nowy przedmiot</p>\r\n            <div className=\"AddNewSubject-InputWrapper\">\r\n               <label className=\"AddNewSubject-Label\">\r\n                  Nazwa przedmiotu:\r\n               </label>\r\n               <input\r\n                  className=\"AddNewSubject-Input\"\r\n                  type=\"text\"\r\n                  name=\"subjectName\"\r\n                  value={subjectName}\r\n                  onChange={e => this.onInputChange(e)}\r\n               />\r\n            </div>\r\n            <div className=\"AddNewSubject-InputWrapper\">\r\n               <label className=\"AddNewSubject-Label\">\r\n                  Liczba godzin:\r\n               </label>\r\n               <input\r\n                  className=\"AddNewSubject-Input\"\r\n                  type=\"text\"\r\n                  name=\"numberOfHours\"\r\n                  value={numberOfHours}\r\n                  onChange={e => this.onInputChange(e)}\r\n               />\r\n            </div>\r\n            <div className=\"AddNewSubject-InputWrapper\">\r\n               <label className=\"AddNewSubject-Label\">\r\n                  Budynek:\r\n               </label>\r\n               <input\r\n                  className=\"AddNewSubject-Input\"\r\n                  type=\"text\"\r\n                  name=\"building\"\r\n                  value={building}\r\n                  onChange={e => this.onInputChange(e)}\r\n               />\r\n            </div>\r\n            <div className=\"AddNewSubject-InputWrapper\">\r\n               <label className=\"AddNewSubject-Label\">\r\n                  Sala:\r\n               </label>\r\n               <input\r\n                  className=\"AddNewSubject-Input\"\r\n                  type=\"text\"\r\n                  name=\"classroom\"\r\n                  value={classroom}\r\n                  onChange={e => this.onInputChange(e)}\r\n               />\r\n            </div>\r\n            <div className=\"AddNewSubject-InputWrapper\">\r\n               <label className=\"AddNewSubject-Label\">\r\n                  Grupa:\r\n               </label>\r\n               <input\r\n                  className=\"AddNewSubject-Input\"\r\n                  type=\"text\"\r\n                  name=\"group\"\r\n                  value={group}\r\n                  onChange={e => this.onInputChange(e)}\r\n               />\r\n            </div>\r\n            <div className=\"AddNewSubject-InputWrapper\">\r\n               <label className=\"AddNewSubject-Label\">\r\n                  Prowadzący:\r\n               </label>\r\n               <input\r\n                  className=\"AddNewSubject-Input\"\r\n                  type=\"text\"\r\n                  name=\"teacher\"\r\n                  value={teacher}\r\n                  onChange={e => this.onInputChange(e)}\r\n               />\r\n            </div>\r\n            <button\r\n               className=\"AddNewSubject-Button\"\r\n               onClick={() => addNewSubject(subjectName, newSubject)}\r\n            >\r\n               Dodaj\r\n            </button>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\n\r\nexport default AddNewSubject;\r\n","import React from 'react';\r\nimport './styles/Expandable.css';\r\nimport { Subject } from './Subjects';\r\n\r\ninterface ExpandableProps {\r\n   subject: Subject;\r\n   title: string;\r\n   onSubjectDelete: (subjectName: string) => void;\r\n}\r\n\r\ninterface ExpandableState {\r\n   isExpanded: boolean;\r\n}\r\n\r\nclass Expandable extends React.Component<ExpandableProps, ExpandableState> {\r\n   state = {\r\n      isExpanded: false,\r\n   }\r\n\r\n   onExpandedClick = () => {\r\n      this.setState(prevState => ({\r\n         isExpanded: !prevState.isExpanded,\r\n      }))\r\n   }\r\n\r\n   render() {\r\n      const { isExpanded } = this.state;\r\n      const { title, onSubjectDelete, subject } = this.props;\r\n      console.log('Expandable');\r\n      return subject ? (\r\n         <div className=\"Expandable-Container\">\r\n            <div\r\n               className=\"Expandable-Header\"\r\n               onClick={() => this.onExpandedClick()}\r\n            >\r\n               <div className=\"Expandable-TextAndButton\">\r\n                  <p className=\"Expandable-Text\">{title}</p>\r\n                  <button\r\n                     className=\"Expandable-DeleteButton\"\r\n                     onClick={() => onSubjectDelete(title)}\r\n                  >\r\n                     X\r\n                  </button>\r\n               </div>\r\n               <div className=\"Expandable-Arrow\">\r\n                  {isExpanded ? '⬆️' : '⬇️'}\r\n               </div>\r\n            </div>\r\n            <div\r\n               style={{ display: isExpanded ? 'flex' : 'none' }}\r\n               className=\"Expandable-Body\"\r\n            >\r\n               <div className=\"Expandable-BodyText\"><p >Budynek:</p><p className=\"Expandable-BodyData\">{subject.building}</p></div>\r\n               <div className=\"Expandable-BodyText\"><p>Sala:</p><p className=\"Expandable-BodyData\">{subject.classroom}</p></div>\r\n               <div className=\"Expandable-BodyText\"><p>Grupa:</p><p className=\"Expandable-BodyData\">{subject.group}</p></div>\r\n               <div className=\"Expandable-BodyText\"><p>Prowadzący:</p><p className=\"Expandable-BodyData\">{subject.teacher}</p></div>\r\n               <div className=\"Expandable-BodyText\"><p>Liczba godzin:</p><p className=\"Expandable-BodyData\">{subject.numberOfHours}</p></div>\r\n            </div>\r\n         </div>\r\n      ) : null\r\n   }\r\n}\r\n\r\n\r\nexport default Expandable;\r\n","import React from 'react';\r\nimport './styles/SubjectsList.css';\r\nimport { Subject } from './Subjects';\r\nimport Expandable from './Expandable';\r\n\r\ninterface SubjectsListProps {\r\n   subjects: Record<string, Subject>;\r\n   onSubjectDelete: (subjectName: string) => void;\r\n}\r\n\r\nconst SubjectsList: React.FC<SubjectsListProps> = ({ subjects, onSubjectDelete }) => (\r\n   <div className=\"SubjectList-Container\">\r\n      {console.log('SubjectsList')}\r\n      {Object.entries(subjects).length ? <p className=\"SubjectList-Text\">Lista przedmiotów:</p> : null}\r\n      {Object.entries(subjects).map((item, idx) => (\r\n         <Expandable key={idx} onSubjectDelete={onSubjectDelete} title={item[0]} subject={item[1]} />\r\n      ))}\r\n   </div>\r\n);\r\n\r\nexport default SubjectsList;\r\n","import React from 'react';\r\nimport AddNewSubject from './AddNewSubject';\r\nimport SubjectsList from './SubjectsList';\r\n\r\nexport interface Subject {\r\n   numberOfHours: string;\r\n   building: string;\r\n   classroom: string;\r\n   group: string;\r\n   teacher: string;\r\n}\r\n\r\ninterface SubjectsState {\r\n   subjects: Record<string, Subject>;\r\n}\r\n\r\nclass Subjects extends React.Component<{}, SubjectsState> {\r\n   state = {\r\n      subjects: {}\r\n   }\r\n\r\n   addNewSubject = (subjectName: string, subject: Subject) => {\r\n      this.setState(prevState => ({\r\n         subjects: {\r\n            ...prevState.subjects,\r\n            [subjectName]: subject,\r\n         }\r\n      }))\r\n   }\r\n\r\n   onSubjectDelete = (subjectName: string) => {\r\n      const subjectsCopy: Record<string, Subject> = { ...this.state.subjects };\r\n      delete subjectsCopy[subjectName];\r\n\r\n      this.setState({\r\n         subjects: { ...subjectsCopy },\r\n      })\r\n   }\r\n\r\n   render() {\r\n      const { subjects } = this.state;\r\n      console.log('Subjects')\r\n      return (\r\n         <div>\r\n            <AddNewSubject addNewSubject={this.addNewSubject} />\r\n            <SubjectsList subjects={subjects} onSubjectDelete={this.onSubjectDelete} />\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nexport default Subjects;\r\n","import React from 'react';\r\nimport './BasicReactApp.css';\r\nimport Header from './components/Header/Header';\r\nimport Footer from './components/Footer/Footer';\r\nimport EditPage from './components/EditPage/EditPage';\r\nimport Subjects from './components/Subjects/Subjects';\r\n\r\ninterface BasicReactAppState {\r\n   firstName: string;\r\n   lastName: string;\r\n   isEditPage: boolean,\r\n}\r\n\r\nclass BasicReactApp extends React.Component<{}, BasicReactAppState> {\r\n   state = {\r\n      firstName: 'Konrad',\r\n      lastName: 'Pasik',\r\n      isEditPage: false,\r\n   }\r\n\r\n   onSubmitChange = (\r\n      firstName: string, lastName: string\r\n   ) => {\r\n      this.setState({\r\n         firstName, lastName\r\n      })\r\n   }\r\n\r\n   onButtonClick = () => {\r\n      this.setState((prevState) => ({\r\n         isEditPage: !prevState.isEditPage,\r\n      }))\r\n   }\r\n\r\n   render() {\r\n      const { firstName, lastName, isEditPage } = this.state;\r\n      console.log('BasicReactApp');\r\n      return (\r\n         <div className=\"BasicReactApp-Container\">\r\n            <Header\r\n               firstName={firstName}\r\n               lastName={lastName}\r\n            />\r\n            <button\r\n               className=\"BasicReactApp-Button\"\r\n               onClick={this.onButtonClick}\r\n            >\r\n               {isEditPage ? 'Przedmioty' : 'Zmiana danych'}\r\n            </button>\r\n            {isEditPage\r\n               ? <EditPage firstName={firstName} onDataChange={this.onSubmitChange} />\r\n               : <Subjects />\r\n            }\r\n            <Footer />\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nexport default BasicReactApp;\r\n","import React from 'react';\r\nimport './Header.css';\r\n\r\ninterface HeaderProps {\r\n   firstName: string;\r\n   lastName: string;\r\n}\r\n\r\nconst Header: React.FC<HeaderProps> = ({ firstName, lastName }) => (\r\n   <div>\r\n      {console.log('Header')}\r\n      <h2 className=\"Header-title\">Cześć {firstName} {lastName}</h2>\r\n   </div>\r\n);\r\n\r\n// const Header: React.FC<HeaderProps> = React.memo(({ firstName, lastName }) => (\r\n//    <div>\r\n//       {console.log('Header')}\r\n//       <h2 className=\"Header-title\">Cześć {firstName} {lastName}</h2>\r\n//    </div>\r\n// ));\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './Footer.css';\r\n\r\nconst Footer: React.FC = () => (\r\n   <div>\r\n      {console.log('Footer')}\r\n      <h4 className=\"Footer-text\">Copyright 2020</h4>\r\n   </div>\r\n);\r\n\r\n// const Footer: React.FC = React.memo(() => (\r\n//    <div>\r\n//       {console.log('Footer')}\r\n//       <h4 className=\"Footer-text\">Copyright 2020</h4>\r\n//    </div>\r\n// ));\r\n\r\nexport default Footer;\r\n","import React, { useState } from 'react';\r\nimport './EditPage.css';\r\n\r\ninterface EditPageProps {\r\n   firstName: string;\r\n   onDataChange: (firstName: string, lastName: string) => void;\r\n}\r\n\r\nconst EditPage: React.FC<EditPageProps> = React.memo(({ firstName, onDataChange }) => {\r\n   const [newFirstName, setNewFirstName] = useState<string>('');\r\n   const [newLastName, setNewLastName] = useState<string>('');\r\n\r\n   const onInputChange = (event: any) => {\r\n      if (event.target.name === 'newFirstName') {\r\n         setNewFirstName(event.target.value);\r\n      }\r\n\r\n      if (event.target.name === 'newLastName') {\r\n         setNewLastName(event.target.value);\r\n      }\r\n   }\r\n   console.log('EditPage');\r\n   return (\r\n      <div className=\"EditPage-Container\">\r\n         <p className=\"EditPage-Text\">Zmień swoje dane {firstName}</p>\r\n         <div className=\"EditPage-InputsWrapper\">\r\n            <input\r\n               className=\"EditPage-Input\"\r\n               type=\"text\"\r\n               name=\"newFirstName\"\r\n               placeholder=\"Imie\"\r\n               value={newFirstName}\r\n               onChange={e => onInputChange(e)}\r\n            />\r\n            <input\r\n               className=\"EditPage-Input\"\r\n               type=\"text\"\r\n               name=\"newLastName\"\r\n               placeholder=\"Nazwisko\"\r\n               value={newLastName}\r\n               onChange={e => onInputChange(e)}\r\n            />\r\n         </div>\r\n         <button\r\n            className=\"EditPage-Button\"\r\n            onClick={() => onDataChange(newFirstName, newLastName)}\r\n         >\r\n            Zmień dane\r\n         </button>\r\n      </div>\r\n   )\r\n})\r\n\r\n\r\nexport default EditPage;\r\n","import React from 'react';\r\nimport { Subject } from './Subjects';\r\nimport './styles/AddNewSubject.css';\r\n\r\ninterface AddNewSubjectProps {\r\n   addNewSubject: (subjectName: string, subject: Subject) => void;\r\n}\r\n\r\ninterface AddNewSubjectState extends Subject {\r\n   subjectName: string;\r\n}\r\n\r\nclass AddNewSubject extends React.Component<AddNewSubjectProps, AddNewSubjectState> {\r\n   state = {\r\n      subjectName: '',\r\n      numberOfHours: '',\r\n      building: '',\r\n      classroom: '',\r\n      group: '',\r\n      teacher: '',\r\n   }\r\n\r\n   onInputChange = (event: any) => {\r\n      this.setState({\r\n         [event.target.name]: event.target.value,\r\n      } as any)\r\n   }\r\n\r\n   render() {\r\n      const {\r\n         subjectName,\r\n         numberOfHours,\r\n         building,\r\n         classroom,\r\n         group,\r\n         teacher,\r\n      } = this.state;\r\n      const { addNewSubject } = this.props;\r\n      const newSubject = {\r\n         numberOfHours,\r\n         building,\r\n         classroom,\r\n         group,\r\n         teacher,\r\n      }\r\n      console.log('AddNewSubject');\r\n      return (\r\n         <div className=\"AddNewSubject-Container\">\r\n            <p className=\"AddNewSubject-Text\">Dodaj nowy przedmiot</p>\r\n            <div className=\"AddNewSubject-InputWrapper\">\r\n               <label className=\"AddNewSubject-Label\">\r\n                  Nazwa przedmiotu:\r\n               </label>\r\n               <input\r\n                  className=\"AddNewSubject-Input\"\r\n                  type=\"text\"\r\n                  name=\"subjectName\"\r\n                  value={subjectName}\r\n                  onChange={e => this.onInputChange(e)}\r\n               />\r\n            </div>\r\n            <div className=\"AddNewSubject-InputWrapper\">\r\n               <label className=\"AddNewSubject-Label\">\r\n                  Liczba godzin:\r\n               </label>\r\n               <input\r\n                  className=\"AddNewSubject-Input\"\r\n                  type=\"text\"\r\n                  name=\"numberOfHours\"\r\n                  value={numberOfHours}\r\n                  onChange={e => this.onInputChange(e)}\r\n               />\r\n            </div>\r\n            <div className=\"AddNewSubject-InputWrapper\">\r\n               <label className=\"AddNewSubject-Label\">\r\n                  Budynek:\r\n               </label>\r\n               <input\r\n                  className=\"AddNewSubject-Input\"\r\n                  type=\"text\"\r\n                  name=\"building\"\r\n                  value={building}\r\n                  onChange={e => this.onInputChange(e)}\r\n               />\r\n            </div>\r\n            <div className=\"AddNewSubject-InputWrapper\">\r\n               <label className=\"AddNewSubject-Label\">\r\n                  Sala:\r\n               </label>\r\n               <input\r\n                  className=\"AddNewSubject-Input\"\r\n                  type=\"text\"\r\n                  name=\"classroom\"\r\n                  value={classroom}\r\n                  onChange={e => this.onInputChange(e)}\r\n               />\r\n            </div>\r\n            <div className=\"AddNewSubject-InputWrapper\">\r\n               <label className=\"AddNewSubject-Label\">\r\n                  Grupa:\r\n               </label>\r\n               <input\r\n                  className=\"AddNewSubject-Input\"\r\n                  type=\"text\"\r\n                  name=\"group\"\r\n                  value={group}\r\n                  onChange={e => this.onInputChange(e)}\r\n               />\r\n            </div>\r\n            <div className=\"AddNewSubject-InputWrapper\">\r\n               <label className=\"AddNewSubject-Label\">\r\n                  Prowadzący:\r\n               </label>\r\n               <input\r\n                  className=\"AddNewSubject-Input\"\r\n                  type=\"text\"\r\n                  name=\"teacher\"\r\n                  value={teacher}\r\n                  onChange={e => this.onInputChange(e)}\r\n               />\r\n            </div>\r\n            <button\r\n               className=\"AddNewSubject-Button\"\r\n               onClick={() => addNewSubject(subjectName, newSubject)}\r\n            >\r\n               Dodaj\r\n            </button>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\n\r\nexport default AddNewSubject;\r\n","import React, { useState } from 'react';\r\nimport './styles/Expandable.css';\r\nimport { Subject } from './Subjects';\r\n\r\ninterface ExpandableProps {\r\n   subject: Subject;\r\n   title: string;\r\n   onSubjectDelete: (subjectName: string) => void;\r\n}\r\n\r\nconst Expandable: React.FC<ExpandableProps> = ({\r\n   subject,\r\n   title,\r\n   onSubjectDelete,\r\n}) => {\r\n   const [isExpanded, setIsExpanded] = useState<boolean>(false);\r\n\r\n   const onExpandedClick = () => {\r\n      setIsExpanded(prevIsExpanded => !prevIsExpanded);\r\n   }\r\n   console.log('Expandable');\r\n   return subject ? (\r\n      <div className=\"Expandable-Container\">\r\n         <div\r\n            className=\"Expandable-Header\"\r\n            onClick={() => onExpandedClick()}\r\n         >\r\n            <div className=\"Expandable-TextAndButton\">\r\n               <p className=\"Expandable-Text\">{title}</p>\r\n               <button\r\n                  className=\"Expandable-DeleteButton\"\r\n                  onClick={() => onSubjectDelete(title)}\r\n               >\r\n                  X\r\n                  </button>\r\n            </div>\r\n            <div className=\"Expandable-Arrow\">\r\n               {isExpanded ? '⬆️' : '⬇️'}\r\n            </div>\r\n         </div>\r\n         <div\r\n            style={{ display: isExpanded ? 'flex' : 'none' }}\r\n            className=\"Expandable-Body\"\r\n         >\r\n            <div className=\"Expandable-BodyText\"><p >Budynek:</p><p className=\"Expandable-BodyData\">{subject.building}</p></div>\r\n            <div className=\"Expandable-BodyText\"><p>Sala:</p><p className=\"Expandable-BodyData\">{subject.classroom}</p></div>\r\n            <div className=\"Expandable-BodyText\"><p>Grupa:</p><p className=\"Expandable-BodyData\">{subject.group}</p></div>\r\n            <div className=\"Expandable-BodyText\"><p>Prowadzący:</p><p className=\"Expandable-BodyData\">{subject.teacher}</p></div>\r\n            <div className=\"Expandable-BodyText\"><p>Liczba godzin:</p><p className=\"Expandable-BodyData\">{subject.numberOfHours}</p></div>\r\n         </div>\r\n      </div>\r\n   ) : null\r\n}\r\n\r\n// const Expandable: React.FC<ExpandableProps> = React.memo(({\r\n//    subject,\r\n//    title,\r\n//    onSubjectDelete,\r\n// }) => {\r\n//    const [isExpanded, setIsExpanded] = useState<boolean>(false);\r\n\r\n//    const onExpandedClick = () => {\r\n//       setIsExpanded(prevIsExpanded => !prevIsExpanded);\r\n//    }\r\n//    console.log('Expandable');\r\n//    return subject ? (\r\n//       <div className=\"Expandable-Container\">\r\n//          <div\r\n//             className=\"Expandable-Header\"\r\n//             onClick={() => onExpandedClick()}\r\n//          >\r\n//             <div className=\"Expandable-TextAndButton\">\r\n//                <p className=\"Expandable-Text\">{title}</p>\r\n//                <button\r\n//                   className=\"Expandable-DeleteButton\"\r\n//                   onClick={() => onSubjectDelete(title)}\r\n//                >\r\n//                   X\r\n//                   </button>\r\n//             </div>\r\n//             <div className=\"Expandable-Arrow\">\r\n//                {isExpanded ? '⬆️' : '⬇️'}\r\n//             </div>\r\n//          </div>\r\n//          <div\r\n//             style={{ display: isExpanded ? 'flex' : 'none' }}\r\n//             className=\"Expandable-Body\"\r\n//          >\r\n//             <div className=\"Expandable-BodyText\"><p >Budynek:</p><p className=\"Expandable-BodyData\">{subject.building}</p></div>\r\n//             <div className=\"Expandable-BodyText\"><p>Sala:</p><p className=\"Expandable-BodyData\">{subject.classroom}</p></div>\r\n//             <div className=\"Expandable-BodyText\"><p>Grupa:</p><p className=\"Expandable-BodyData\">{subject.group}</p></div>\r\n//             <div className=\"Expandable-BodyText\"><p>Prowadzący:</p><p className=\"Expandable-BodyData\">{subject.teacher}</p></div>\r\n//             <div className=\"Expandable-BodyText\"><p>Liczba godzin:</p><p className=\"Expandable-BodyData\">{subject.numberOfHours}</p></div>\r\n//          </div>\r\n//       </div>\r\n//    ) : null\r\n// })\r\n\r\nexport default Expandable;\r\n","import React from 'react';\r\nimport './styles/SubjectsList.css';\r\nimport { Subject } from './Subjects';\r\nimport Expandable from './Expandable';\r\n\r\ninterface SubjectsListProps {\r\n   subjects: Record<string, Subject>;\r\n   onSubjectDelete: (subjectName: string) => void;\r\n}\r\n\r\nconst SubjectsList: React.FC<SubjectsListProps> = ({ subjects, onSubjectDelete }) => (\r\n   <div className=\"SubjectList-Container\">\r\n      {console.log('SubjectsList')}\r\n      {Object.entries(subjects).length ? <p className=\"SubjectList-Text\">Lista przedmiotów:</p> : null}\r\n      {Object.entries(subjects).map((item, idx) => (\r\n         <Expandable key={idx} onSubjectDelete={onSubjectDelete} title={item[0]} subject={item[1]} />\r\n      ))}\r\n   </div>\r\n);\r\n\r\n// const SubjectsList: React.FC<SubjectsListProps> = React.memo(({ subjects, onSubjectDelete }) => (\r\n//    <div className=\"SubjectList-Container\">\r\n//       {console.log('SubjectsList')}\r\n//       {Object.entries(subjects).length ? <p className=\"SubjectList-Text\">Lista przedmiotów:</p> : null}\r\n//       {Object.entries(subjects).map((item, idx) => (\r\n//          <Expandable key={idx} onSubjectDelete={onSubjectDelete} title={item[0]} subject={item[1]} />\r\n//       ))}\r\n//    </div>\r\n// ));\r\n\r\nexport default SubjectsList;\r\n","import React, { useState } from 'react';\r\n// import React, { useState, useCallback } from 'react';\r\nimport AddNewSubject from './AddNewSubject';\r\nimport SubjectsList from './SubjectsList';\r\n\r\nexport interface Subject {\r\n   numberOfHours: string;\r\n   building: string;\r\n   classroom: string;\r\n   group: string;\r\n   teacher: string;\r\n}\r\n\r\nconst Subjects: React.FC = () => {\r\n   const [subjects, setSubjects] = useState<Record<string, Subject>>({});\r\n\r\n   const addNewSubject = (subjectName: string, subject: Subject) => {\r\n      setSubjects(prevSubjects => ({\r\n         ...prevSubjects,\r\n         [subjectName]: subject,\r\n      }))\r\n   }\r\n\r\n   // const addNewSubject = useCallback((subjectName: string, subject: Subject) => {\r\n   //    setSubjects(prevSubjects => ({\r\n   //       ...prevSubjects,\r\n   //       [subjectName]: subject,\r\n   //    }))\r\n   // }, [setSubjects])\r\n\r\n   const onSubjectDelete = (subjectName: string) => {\r\n      const subjectsCopy: Record<string, Subject> = { ...subjects };\r\n      delete subjectsCopy[subjectName];\r\n\r\n      setSubjects({ ...subjectsCopy });\r\n   }\r\n\r\n   // const onSubjectDelete = useCallback((subjectName: string) => {\r\n   //    const subjectsCopy: Record<string, Subject> = { ...subjects };\r\n   //    delete subjectsCopy[subjectName];\r\n\r\n   //    setSubjects({ ...subjectsCopy });\r\n   // }, [setSubjects, subjects]);\r\n   console.log('Subjects');\r\n   return (\r\n      <div>\r\n         <AddNewSubject addNewSubject={addNewSubject} />\r\n         <SubjectsList subjects={subjects} onSubjectDelete={onSubjectDelete} />\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Subjects;\r\n","import React, { useState, useEffect } from 'react';\r\n// import React, { useState, useCallback } from 'react';\r\nimport './ReactHooksApp.css';\r\nimport Header from './components/Header/Header';\r\nimport Footer from './components/Footer/Footer';\r\nimport EditPage from './components/EditPage/EditPage';\r\nimport Subjects from './components/Subjects/Subjects';\r\n\r\nconst ReactHooksApp: React.FC = () => {\r\n   const [firstName, setFirstName] = useState<string>('Konrad');\r\n   const [lastName, setLastName] = useState<string>('Pasik');\r\n   const [isEditPage, setIsEditPage] = useState<boolean>(false);\r\n\r\n   useEffect(() => {\r\n      console.log('Tylko raz sie wywołuje');\r\n   }, []);\r\n\r\n   useEffect(() => {\r\n      console.log('Wywołam się po każdej zmianie nazwiska');\r\n   }, [lastName]);\r\n\r\n   useEffect(() => () => {\r\n      console.log('Wywołam się zaraz przed odmontowaniem komponentu');\r\n   }, []);\r\n\r\n   const onSubmitChange = (\r\n      firstName: string, lastName: string\r\n   ) => {\r\n      setFirstName(firstName);\r\n      setLastName(lastName);\r\n   }\r\n\r\n   // const onSubmitChange = useCallback((firstName: string, lastName: string) => {\r\n   //    setFirstName(firstName);\r\n   //    setLastName(lastName);\r\n   // }, [setFirstName, setLastName]);\r\n\r\n   const onButtonClick = () => {\r\n      setIsEditPage(prevIsEditPage => !prevIsEditPage);\r\n   }\r\n   console.log('ReactHooksApp');\r\n   return (\r\n      <div className=\"ReactHooksApp-Container\">\r\n         <Header\r\n            firstName={firstName}\r\n            lastName={lastName}\r\n         />\r\n         <button\r\n            className=\"ReactHooksApp-Button\"\r\n            onClick={onButtonClick}\r\n         >\r\n            {isEditPage ? 'Przedmioty' : 'Zmiana danych'}\r\n         </button>\r\n         {isEditPage\r\n            ? <EditPage firstName={firstName} onDataChange={onSubmitChange} />\r\n            : <Subjects />\r\n         }\r\n         <Footer />\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default ReactHooksApp;\r\n","import { ApplicationState, Identity, Subject } from \"./constants\";\r\n\r\nexport const getUserName = (state: ApplicationState): string => state?.identity?.firstName;\r\n\r\nexport const getUserIdentity = (state: ApplicationState): Identity => state?.identity;\r\n\r\nexport const getUserSubjects = (state: ApplicationState): Record<string, Subject> => state?.subjects;\r\n\r\nexport const getState = (state: ApplicationState): ApplicationState => state;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './Header.css';\r\nimport { getUserIdentity } from '../../store/selector';\r\n\r\nconst Header: React.FC = () => {\r\n   const { firstName, lastName } = useSelector(getUserIdentity);\r\n\r\n   return (\r\n      <div>\r\n         <h2 className=\"Header-title\">Cześć {firstName} {lastName}</h2>\r\n      </div>\r\n   )\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './Footer.css';\r\n\r\nconst Footer: React.FC = () => (\r\n   <div>\r\n      <h4 className=\"Footer-text\">Copyright 2020</h4>\r\n   </div>\r\n);\r\n\r\nexport default Footer;\r\n","import { Subject, ActionsType } from \"./constants\"\r\n\r\nexport const changeUserIdentity = (newFirstName: string, newLastName: string) => ({\r\n   newFirstName,\r\n   newLastName,\r\n   type: ActionsType.changeUserIdentity,\r\n})\r\n\r\nexport const addNewSubject = (subjectName: string, subject: Subject) => ({\r\n   subjectName,\r\n   subject,\r\n   type: ActionsType.addNewSubject,\r\n})\r\n\r\nexport const deleteSubject = (subjectName: string) => ({\r\n   subjectName,\r\n   type: ActionsType.deleteSubject,\r\n})","import React, { useState } from 'react';\nimport './styles/App.css';\nimport BasicReactApp from './BasicReact/BasicReactApp';\nimport ReactHooksApp from './ReactHooks/ReactHooksApp';\nimport ReduxApp from './Redux/ReduxApp';\n\nenum CreatedExamples {\n  BasicReactApp = 'BasicReactApp',\n  ReactHooksApp = 'ReactHooksApp',\n  ReduxApp = 'ReduxApp',\n}\n\nconst App: React.FC = () => {\n  const [chosenApp, setChosenApp] = useState<CreatedExamples | undefined>(undefined);\n\n  return (\n    <div className=\"App\">\n      \n      <header className=\"App-header\">\n        <div\n          className=\"App-header-tab\"\n          style={{ color: !chosenApp ? '#61dafb' : 'white'}}\n          onClick={() => setChosenApp(undefined)}\n        >\n          Home\n        </div>\n        <div\n          className=\"App-header-tab\"\n          style={{ color: chosenApp === CreatedExamples.BasicReactApp ? '#61dafb' : 'white'}}\n          onClick={() => setChosenApp(CreatedExamples.BasicReactApp)}\n        >\n          Basic React App\n        </div>\n        <div\n          className=\"App-header-tab\"\n          style={{ color: chosenApp === CreatedExamples.ReactHooksApp ? '#61dafb' : 'white'}}\n          onClick={() => setChosenApp(CreatedExamples.ReactHooksApp)}\n        >\n          React Hooks\n        </div>\n        <div\n          className=\"App-header-tab\"\n          style={{ color: chosenApp === CreatedExamples.ReduxApp ? '#61dafb' : 'white'}}\n          onClick={() => setChosenApp(CreatedExamples.ReduxApp)}\n        >\n          Redux\n        </div>\n      </header>\n\n      <article className=\"App-article\">\n        {!chosenApp && <div className=\"App-WelcomePage\">Wybierz przykład z nawigacji powyżej</div>}\n        {chosenApp === CreatedExamples.BasicReactApp && <BasicReactApp />}\n        {chosenApp === CreatedExamples.ReactHooksApp && <ReactHooksApp />}\n        {chosenApp === CreatedExamples.ReduxApp && <ReduxApp />}\n      </article>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport './EditPage.css';\r\nimport { getUserIdentity } from '../../store/selector';\r\nimport { changeUserIdentity } from '../../store/actions';\r\n\r\nconst EditPage: React.FC = () => {\r\n   const [newFirstName, setNewFirstName] = useState<string>('');\r\n   const [newLastName, setNewLastName] = useState<string>('');\r\n   const { firstName } = useSelector(getUserIdentity);\r\n   const dispatch = useDispatch();\r\n\r\n   const onDataChange = () => dispatch(changeUserIdentity(newFirstName, newLastName));\r\n\r\n   const onInputChange = (event: any) => {\r\n      if (event.target.name === 'newFirstName') {\r\n         setNewFirstName(event.target.value);\r\n      }\r\n\r\n      if (event.target.name === 'newLastName') {\r\n         setNewLastName(event.target.value);\r\n      }\r\n   }\r\n\r\n   return (\r\n      <div className=\"EditPage-Container\">\r\n         <p className=\"EditPage-Text\">Zmień swoje dane {firstName}</p>\r\n         <div className=\"EditPage-InputsWrapper\">\r\n            <input\r\n               className=\"EditPage-Input\"\r\n               type=\"text\"\r\n               name=\"newFirstName\"\r\n               placeholder=\"Imie\"\r\n               value={newFirstName}\r\n               onChange={e => onInputChange(e)}\r\n            />\r\n            <input\r\n               className=\"EditPage-Input\"\r\n               type=\"text\"\r\n               name=\"newLastName\"\r\n               placeholder=\"Nazwisko\"\r\n               value={newLastName}\r\n               onChange={e => onInputChange(e)}\r\n            />\r\n         </div>\r\n         <button\r\n            className=\"EditPage-Button\"\r\n            onClick={() => onDataChange()}\r\n         >\r\n            Zmień dane\r\n         </button>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default EditPage;\r\n","import React, { Dispatch } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Action } from 'redux';\r\nimport { Subject } from './Subjects';\r\nimport './styles/AddNewSubject.css';\r\nimport { addNewSubject } from '../../store/actions';\r\n\r\ninterface AddNewSubjectProps {\r\n   addNewSubject: (subjectName: string, subject: Subject) => void;\r\n}\r\n\r\ninterface AddNewSubjectState extends Subject {\r\n   subjectName: string;\r\n}\r\n\r\nclass AddNewSubject extends React.Component<AddNewSubjectProps, AddNewSubjectState> {\r\n   state = {\r\n      subjectName: '',\r\n      numberOfHours: '',\r\n      building: '',\r\n      classroom: '',\r\n      group: '',\r\n      teacher: '',\r\n   }\r\n\r\n   onInputChange = (event: any) => {\r\n      this.setState({\r\n         [event.target.name]: event.target.value,\r\n      } as any)\r\n   }\r\n\r\n   render() {\r\n      const {\r\n         subjectName,\r\n         numberOfHours,\r\n         building,\r\n         classroom,\r\n         group,\r\n         teacher,\r\n      } = this.state;\r\n      const { addNewSubject } = this.props;\r\n      const newSubject = {\r\n         numberOfHours,\r\n         building,\r\n         classroom,\r\n         group,\r\n         teacher,\r\n      }\r\n\r\n      return (\r\n         <div className=\"AddNewSubject-Container\">\r\n            <p className=\"AddNewSubject-Text\">Dodaj nowy przedmiot</p>\r\n            <div className=\"AddNewSubject-InputWrapper\">\r\n               <label className=\"AddNewSubject-Label\">\r\n                  Nazwa przedmiotu:\r\n               </label>\r\n               <input\r\n                  className=\"AddNewSubject-Input\"\r\n                  type=\"text\"\r\n                  name=\"subjectName\"\r\n                  value={subjectName}\r\n                  onChange={e => this.onInputChange(e)}\r\n               />\r\n            </div>\r\n            <div className=\"AddNewSubject-InputWrapper\">\r\n               <label className=\"AddNewSubject-Label\">\r\n                  Liczba godzin:\r\n               </label>\r\n               <input\r\n                  className=\"AddNewSubject-Input\"\r\n                  type=\"text\"\r\n                  name=\"numberOfHours\"\r\n                  value={numberOfHours}\r\n                  onChange={e => this.onInputChange(e)}\r\n               />\r\n            </div>\r\n            <div className=\"AddNewSubject-InputWrapper\">\r\n               <label className=\"AddNewSubject-Label\">\r\n                  Budynek:\r\n               </label>\r\n               <input\r\n                  className=\"AddNewSubject-Input\"\r\n                  type=\"text\"\r\n                  name=\"building\"\r\n                  value={building}\r\n                  onChange={e => this.onInputChange(e)}\r\n               />\r\n            </div>\r\n            <div className=\"AddNewSubject-InputWrapper\">\r\n               <label className=\"AddNewSubject-Label\">\r\n                  Sala:\r\n               </label>\r\n               <input\r\n                  className=\"AddNewSubject-Input\"\r\n                  type=\"text\"\r\n                  name=\"classroom\"\r\n                  value={classroom}\r\n                  onChange={e => this.onInputChange(e)}\r\n               />\r\n            </div>\r\n            <div className=\"AddNewSubject-InputWrapper\">\r\n               <label className=\"AddNewSubject-Label\">\r\n                  Grupa:\r\n               </label>\r\n               <input\r\n                  className=\"AddNewSubject-Input\"\r\n                  type=\"text\"\r\n                  name=\"group\"\r\n                  value={group}\r\n                  onChange={e => this.onInputChange(e)}\r\n               />\r\n            </div>\r\n            <div className=\"AddNewSubject-InputWrapper\">\r\n               <label className=\"AddNewSubject-Label\">\r\n                  Prowadzący:\r\n               </label>\r\n               <input\r\n                  className=\"AddNewSubject-Input\"\r\n                  type=\"text\"\r\n                  name=\"teacher\"\r\n                  value={teacher}\r\n                  onChange={e => this.onInputChange(e)}\r\n               />\r\n            </div>\r\n            <button\r\n               className=\"AddNewSubject-Button\"\r\n               onClick={() => addNewSubject(subjectName, newSubject)}\r\n            >\r\n               Dodaj\r\n            </button>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => ({\r\n   addNewSubject: (subjectName: string, subject: Subject) => dispatch(addNewSubject(subjectName, subject)),\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(AddNewSubject);\r\n","import React, { useState } from 'react';\r\nimport './styles/Expandable.css';\r\nimport { Subject } from './Subjects';\r\n\r\ninterface ExpandableProps {\r\n   subject: Subject;\r\n   title: string;\r\n   onSubjectDelete: (subjectName: string) => void;\r\n}\r\n\r\nconst Expandable: React.FC<ExpandableProps> = ({\r\n   subject,\r\n   title,\r\n   onSubjectDelete,\r\n}) => {\r\n   const [isExpanded, setIsExpanded] = useState<boolean>(false);\r\n\r\n   const onExpandedClick = () => {\r\n      setIsExpanded(prevIsExpanded => !prevIsExpanded);\r\n   }\r\n\r\n   return subject ? (\r\n      <div className=\"Expandable-Container\">\r\n         <div\r\n            className=\"Expandable-Header\"\r\n            onClick={() => onExpandedClick()}\r\n         >\r\n            <div className=\"Expandable-TextAndButton\">\r\n               <p className=\"Expandable-Text\">{title}</p>\r\n               <button\r\n                  className=\"Expandable-DeleteButton\"\r\n                  onClick={() => onSubjectDelete(title)}\r\n               >\r\n                  X\r\n                  </button>\r\n            </div>\r\n            <div className=\"Expandable-Arrow\">\r\n               {isExpanded ? '⬆️' : '⬇️'}\r\n            </div>\r\n         </div>\r\n         <div\r\n            style={{ display: isExpanded ? 'flex' : 'none' }}\r\n            className=\"Expandable-Body\"\r\n         >\r\n            <div className=\"Expandable-BodyText\"><p >Budynek:</p><p className=\"Expandable-BodyData\">{subject.building}</p></div>\r\n            <div className=\"Expandable-BodyText\"><p>Sala:</p><p className=\"Expandable-BodyData\">{subject.classroom}</p></div>\r\n            <div className=\"Expandable-BodyText\"><p>Grupa:</p><p className=\"Expandable-BodyData\">{subject.group}</p></div>\r\n            <div className=\"Expandable-BodyText\"><p>Prowadzący:</p><p className=\"Expandable-BodyData\">{subject.teacher}</p></div>\r\n            <div className=\"Expandable-BodyText\"><p>Liczba godzin:</p><p className=\"Expandable-BodyData\">{subject.numberOfHours}</p></div>\r\n         </div>\r\n      </div>\r\n   ) : null\r\n}\r\n\r\nexport default Expandable;\r\n","import React from 'react';\r\nimport './styles/SubjectsList.css';\r\nimport Expandable from './Expandable';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getUserSubjects } from '../../store/selector';\r\nimport { deleteSubject } from '../../store/actions';\r\n\r\nconst SubjectsList: React.FC = () => {\r\n   const subjects = useSelector(getUserSubjects);\r\n   const dispatch = useDispatch();\r\n\r\n   const onSubjectDelete = (subjectName: string) => dispatch(deleteSubject(subjectName));\r\n   \r\n   return (\r\n      <div className=\"SubjectList-Container\">\r\n         {Object.entries(subjects).length ? <p className=\"SubjectList-Text\">Lista przedmiotów:</p> : null}\r\n         {Object.entries(subjects).map((item, idx) => (\r\n            <Expandable key={idx} onSubjectDelete={onSubjectDelete} title={item[0]} subject={item[1]} />\r\n         ))}\r\n      </div>\r\n   )\r\n};\r\n\r\nexport default SubjectsList;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport AddNewSubject from './AddNewSubject';\r\nimport SubjectsList from './SubjectsList';\r\nimport { getState } from '../../store/selector';\r\n\r\nexport interface Subject {\r\n   numberOfHours: string;\r\n   building: string;\r\n   classroom: string;\r\n   group: string;\r\n   teacher: string;\r\n}\r\n\r\nconst Subjects: React.FC = () => {\r\n   const state = useSelector(getState);\r\n   console.log(state);\r\n\r\n   return (\r\n      <div>\r\n         <AddNewSubject />\r\n         <SubjectsList />\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Subjects;\r\n","import { createStore } from 'redux';\r\nimport { reducer } from './reducers';\r\n\r\nexport const store = createStore(reducer);\r\n","import { Action, ApplicationState, ActionsType, Subject, initialState } from \"./constants\";\r\n\r\nexport const reducer = (state: ApplicationState = initialState, action: Action) => {\r\n   switch(action.type) {\r\n      case ActionsType.changeUserIdentity:\r\n         return {\r\n            ...state,\r\n            identity: {\r\n               firstName: action.newFirstName,\r\n               lastName: action.newLastName,\r\n            }\r\n         }\r\n      case ActionsType.addNewSubject:\r\n         return {\r\n            ...state,\r\n            subjects: {\r\n               ...state.subjects,\r\n               [action.subjectName]: action.subject,\r\n            }\r\n         }\r\n      case ActionsType.deleteSubject:\r\n         const subjectsCopy: Record<string, Subject> = { ...state.subjects };\r\n         delete subjectsCopy[action.subjectName];\r\n   \r\n         return {\r\n            ...state,\r\n            subjects: subjectsCopy,\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n}","import React, { useState } from 'react';\r\n// import React, { useState, useCallback } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport './ReduxApp.css';\r\nimport Header from './components/Header/Header';\r\nimport Footer from './components/Footer/Footer';\r\nimport EditPage from './components/EditPage/EditPage';\r\nimport Subjects from './components/Subjects/Subjects';\r\nimport { store } from './store/store';\r\n\r\nconst ReduxApp: React.FC = () => {\r\n   const [isEditPage, setIsEditPage] = useState<boolean>(false);\r\n\r\n   const onButtonClick = () => {\r\n      setIsEditPage(prevIsEditPage => !prevIsEditPage);\r\n   }\r\n\r\n   return (\r\n      <Provider store={store}>\r\n         <div className=\"ReduxApp-Container\">\r\n            <Header />\r\n            <button\r\n               className=\"ReduxApp-Button\"\r\n               onClick={onButtonClick}\r\n            >\r\n               {isEditPage ? 'Przedmioty' : 'Zmiana danych'}\r\n            </button>\r\n            {isEditPage\r\n               ? <EditPage />\r\n               : <Subjects />\r\n            }\r\n            <Footer />\r\n         </div>\r\n      </Provider>\r\n   )\r\n}\r\n\r\nexport default ReduxApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}